
# $ git config --local user.name ""
# $ git config --local user.email ""

[core]
	editor = vim
	pager = less
	autocrlf = true

[alias]
	co = checkout
	b = branch
	log = log --oneline --decorate
	lodag = log --oneline --decorate --all --graph
	ls = log --oneline --decorate --all --graph --format=format:'%C(bold yellow)%h%C(reset) %C(bold yellow)%d%C(reset) %C(bold blue)| %an - %ar |%C(reset) %C(white)%s%C(reset)' 

	# if there's not number, by default it'll "5"
	alog = "!f() { git log -${1:-5}; }; f"
	alodag = "!f() { git lodag -${1:-5}; }; f"
	als = "!f() { git ls -${1:-5}; }; f"

	reset = "!f() { git backup && git check-backup && git reset  }; f"
    
	# By default its going to break the first commit
	# wiht relative number
  rsoftn = "!f() {  branch_name=\"reset-soft/$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)\";  git branch ${2:-$branch_name}  && git reset --soft HEAD~${1:-1};  };  f"
  # with hash
  rsofth = "!f() {  branch_name=\"reset-soft/$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)\";  git branch ${2:-$branch_name}  && git reset --soft ${1:-1};  };  f"

	# By default its going to break the first commit
  # with relative number
  rhardn = "!f() {  branch_name=\"reset-hard/$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)\";  git branch ${2:-$branch_name}  && git reset --hard HEAD~${1:-1};  };  f"
  # with hash
  rhardh = "!f() {  branch_name=\"reset-hard/$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)\";  git branch ${2:-$branch_name}  && git reset --hard ${1:-1};  };  f"
  
  amend = "!f() {  branch_name=\"amend/$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)\"; git branch ${1:-$branch_name} && git commit --amend; }; f"

  backup = "!f() {  current_folder=$(basename \"$PWD\");  folder_name=\"backup-$current_folder-$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)\";  $(mkdir -p ./../$folder_name);  $(cp -r .git ./../$folder_name/.git);  };  f"

  backupcheck = "!f() { current_folder=$(basename \"$PWD\"); ls -lt .. | grep $current_folder; }; f"


	s-s = status -s
	s = status
	c = clone
	# e.g.
	# d   -> diff HEAD~0
	# d 0 -> diff HEAD~0
	# d 1 -> diff HEAD~1
	# d n -> diff HEAD~n
	d = "!f() { git diff HEAD~${1:-0}; }; f"

	t = tag
	rmtag = tag -d
	deletetag = tag -d
	ct = commit
	ctm = commit -m

	bis = bisect start
	bib = bisect bad
	big = bisect good
	re = remote
	re-v = remote -v
	aurlo = remote add origin
	surlo = remote set-url origin
	rmurlo = remote rm origin
	delurlo = remote rm origin

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[help]
	format = web

[credential]
	# interative = always
	interative = never
	# helper = manager

[push]
	default = current
